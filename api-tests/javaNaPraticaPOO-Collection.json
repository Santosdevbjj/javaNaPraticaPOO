{
	"info": {
		"_postman_id": "0d1e3f4a-8d7d-4c3e-9e2a-7b3b4d6b6c6b",
		"name": "JavaNaPraticaPOO - Banking API (Docker Ready)",
		"description": "Coleção de testes para a API REST de Contas Bancárias em Java/Spring Boot. Requer que o projeto esteja rodando via docker-compose.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "POST 1.1 - Criar Conta (SUCESSO - Salva ID)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"titular\": \"Cliente Teste CRUD\",\n    \"saldo\": 1000.00\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/contas",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"contas"
					]
				}
			},
			"response": [
				{
					"name": "POST Criar Conta (201 Created)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"titular\": \"Cliente Teste CRUD\",\n    \"saldo\": 1000.00\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/contas",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"contas"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\"id\":1,\"titular\":\"Cliente Teste CRUD\",\"saldo\":1000.0}"
				}
			],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Testa se o status é 201 (Created)",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"// Salva o ID da conta criada em uma variável para ser usado nos próximos testes",
							"var jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"contaId\", jsonData.id);",
							"pm.test(\"ID da conta salvo: \" + pm.collectionVariables.get(\"contaId\"), function() {",
							"    pm.expect(jsonData.id).to.be.a('number');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "POST 1.2 - Criar Conta (FALHA - Saldo Inválido 400)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"titular\": \"Cliente Saldo Negativo\",\n    \"saldo\": -50.00\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/contas",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"contas"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Testa se o GlobalExceptionHandler retornou status 400 (Bad Request)",
							"pm.test(\"Status code is 400 Bad Request\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "GET 2.1 - Listar Todas as Contas (200 OK)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/contas",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"contas"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Resposta é um Array\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('array');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "GET 2.2 - Buscar Conta por ID (SUCESSO - 200)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/contas/{{contaId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"contas",
						"{{contaId}}"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"ID da conta corresponde\", function () {",
							"    pm.expect(pm.response.json().id).to.eql(pm.collectionVariables.get(\"contaId\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "GET 2.3 - Buscar Conta por ID (FALHA - 404 Not Found)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/contas/99999",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"contas",
						"99999"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Testa se o GlobalExceptionHandler retornou status 404 (Not Found)",
							"pm.test(\"Status code is 404 Not Found\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "PUT 3.1 - Atualizar Conta (200 OK)",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"titular\": \"John Doe - SALDO ATUALIZADO\",\n    \"saldo\": 50000.00\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/contas/{{contaId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"contas",
						"{{contaId}}"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Nome do titular atualizado\", function () {",
							"    pm.expect(pm.response.json().titular).to.eql(\"John Doe - SALDO ATUALIZADO\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "DELETE 4.1 - Deletar Conta (204 No Content)",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/contas/{{contaId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"contas",
						"{{contaId}}"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Verifica se o DELETE foi bem sucedido (204 No Content)",
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			]
		}
	],
	"protocolProfileBehavior": {}
}
